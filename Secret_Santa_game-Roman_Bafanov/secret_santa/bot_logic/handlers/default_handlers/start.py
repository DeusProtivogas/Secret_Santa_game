from secret_santa.bot_logic.loader import dp, bot
from secret_santa.bot_logic.set_bot_commands import set_commands
from aiogram.filters.command import Command
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.fsm.context import FSMContext
from secret_santa.bot_logic.statesform import StepsForm
from aiogram import types, F
from secret_santa.models import Patricipants, Game

from asgiref.sync import sync_to_async


NAME = None
PLAYER_ID = None
PLAYER_E_MAIL = None
PLAYER_INTERESTS = None
PLAYER_LETTER = None

GAME_ID = None


@dp.message(Command("start"))
async def cmd_start(message: types.Message, state: FSMContext):
    await set_commands(bot)
    print("HERE: ", message.text)
    text = message.text.split()
    await bot.send_sticker(message.from_user.id,
                           sticker='CAACAgIAAxkBAAEK9qFlevsInA68q_W-0N39iF5-5CCrjwACeAEAAiI3jgQ6pl0vZ69f1TME')
    if len(text) > 1:
        id_organizer = text[1]
        global GAME_ID
        global PLAYER_ID
        GAME_ID = id_organizer
        PLAYER_ID = message.from_user.id
        # –ó–∞–ø—Ä–æ—Å –Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏–≥—Ä–µ
        await message.answer(f"–ó–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ, —Ç—ã —Å–æ–±–∏—Ä–∞–µ—à—å—Å—è —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –∏–≥—Ä–µ: {id_organizer}")
                             # "(–≤—ã–≤–µ—Å—Ç–∏ –Ω–∞ —ç–∫—Ä–∞–Ω –¥–∞–Ω–Ω—ã–µ –æ–± –∏–≥—Ä–µ: –Ω–∞–∑–≤–∞–Ω–∏–µ, –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –ø–æ–¥–∞—Ä–∫–∞, "
                             # "–ø–µ—Ä–∏–æ–¥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ –¥–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–¥–∞—Ä–∫–æ–≤)")
        await message.answer("–î–ª—è —É—á–∞—Å—Ç–∏—è –ø—Ä–æ–π–¥–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é.\n"
                             "–ù–∞–ø–∏—à–∏ —Å–≤–æ—ë –∏–º—è")
        await state.set_state(StepsForm.PLAYER_NAME)
    else:
        builder = InlineKeyboardBuilder()
        builder.row(types.InlineKeyboardButton(
            text="–°–æ–∑–¥–∞—Ç—å –∏–≥—Ä—É", callback_data="–°–æ–∑–¥–∞—Ç—å –∏–≥—Ä—É")
        )
        await message.answer("–û—Ä–≥–∞–Ω–∏–∑—É–π —Ç–∞–π–Ω—ã–π –æ–±–º–µ–Ω –ø–æ–¥–∞—Ä–∫–∞–º–∏, üéÑüéÑüéÑ\n"
                             "üéÑüéÑüéÑ –∑–∞–ø—É—Å—Ç–∏ –ø—Ä–∞–∑–¥–Ω–∏—á–Ω–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ!",
                             reply_markup=builder.as_markup())
    # referral_link = f"https://t.me/Secret_Santa_educational_bot?start={id_user}"
    # print(referral_link)
    # await message.answer("–û—Ä–≥–∞–Ω–∏–∑—É–π —Ç–∞–π–Ω—ã–π –æ–±–º–µ–Ω –ø–æ–¥–∞—Ä–∫–∞–º–∏, –∑–∞–ø—É—Å—Ç–∏ –ø—Ä–∞–∑–¥–Ω–∏—á–Ω–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ!")


@dp.message(StepsForm.PLAYER_NAME)
async def new_player(message: types.Message, state: FSMContext):
    await state.clear()
    global NAME
    NAME = message.text
    await message.answer(f"–ó–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ {NAME}! –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏ –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã")
    await state.set_state(StepsForm.E_MAIL)


@dp.message(StepsForm.E_MAIL)
async def player_email(message: types.Message, state: FSMContext):
    await state.clear()
    global PLAYER_E_MAIL
    PLAYER_E_MAIL = message.text
    await message.answer("–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏ –æ —Å–≤–æ–∏—Ö —É–≤–ª–µ—á–µ–Ω–∏—è—Ö, –∏–Ω—Ç–µ—Ä–µ—Å–∞—Ö, "
                         "—á—Ç–æ–±—ã –¢–∞–π–Ω—ã–π –°–∞–Ω—Ç–∞ –∑–Ω–∞–ª —á–µ–≥–æ —Ç—ã —Ö–æ—á–µ—à—å. –ù–µ –±–æ–ª–µ–µ 75 —Å–∏–º–≤–æ–ª–æ–≤")
    await state.set_state(StepsForm.INTERESTS)


@dp.message(StepsForm.INTERESTS)
async def player_interests(message: types.Message, state: FSMContext):
    await state.clear()
    global PLAYER_INTERESTS
    PLAYER_INTERESTS = message.text
    if len(PLAYER_INTERESTS) > 75:
        difference = len(PLAYER_INTERESTS) - 75
        await message.answer(f"–ù—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ –Ω–µ –±–æ–ª–µ–µ 75 —Å–∏–º–≤–æ–ª–æ–≤. –í–≤–µ–¥–∏ —Ç–µ–∫—Å—Ç –∫–æ—Ä–æ—á–µ –Ω–∞ {difference}")
        await state.set_state(StepsForm.INTERESTS)
    else:
        builder = InlineKeyboardBuilder()
        builder.row(types.InlineKeyboardButton(
            text="–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", callback_data="–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –ø–∏—Å—å–º–æ")
        )
        await message.answer("–¢–µ–ø–µ—Ä—å –°–∞–Ω—Ç–µ –±—É–¥–µ—Ç –ø—Ä–æ—â–µ –Ω–∞–π—Ç–∏ —Ç–µ–±–µ –ø–æ–¥–∞—Ä–æ–∫! "
                             "–¢–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å –Ω–∞–ø–∏—Å–∞—Ç—å –°–∞–Ω—Ç–µ –ø–∏—Å—å–º–æ! –ù–µ –±–æ–ª–µ–µ 200 —Å–∏–º–≤–æ–ª–æ–≤",
                             reply_markup=builder.as_markup())
        await state.set_state(StepsForm.LETTER)



@dp.message(StepsForm.LETTER)
async def player_letter(message: types.Message, state: FSMContext):
    await state.clear()
    global PLAYER_LETTER
    global GAME_ID
    PLAYER_LETTER = message.text
    if len(PLAYER_LETTER) > 200:
        difference = len(PLAYER_LETTER) - 200
        await message.answer(f"–ù—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ –Ω–µ –±–æ–ª–µ–µ 200 —Å–∏–º–≤–æ–ª–æ–≤. –í–≤–µ–¥–∏ —Ç–µ–∫—Å—Ç –∫–æ—Ä–æ—á–µ –Ω–∞ {difference}")
        await state.set_state(StepsForm.LETTER)
    else:

        game = None
        async for g in Game.objects.filter(creators_id=GAME_ID):
            game = g
            break
        # print("Game: ", game)
        # print("User id?: ", message.from_user.id)
        participant = Patricipants(game=game, id_user=message.from_user.id,
                                   name=NAME, e_mail=PLAYER_E_MAIL,
                                   interests=PLAYER_INTERESTS, letter_to_santa=PLAYER_LETTER,)
        await sync_to_async(participant.save)()

        await message.answer("–ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ, —Ç—ã –≤ –∏–≥—Ä–µ! "
                             "\"–î–∞—Ç–∞\" –º—ã –ø—Ä–æ–≤–µ–¥–µ–º –∂–µ—Ä–µ–±—å–µ–≤–∫—É –∏ —Ç—ã —É–∑–Ω–∞–µ—à—å –∏–º—è –∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã —Å–≤–æ–µ–≥–æ —Ç–∞–π–Ω–æ–≥–æ –¥—Ä—É–≥–∞. "
                             "–ï–º—É –∏ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –ø–æ–¥–∞—Ä–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫!")


@dp.callback_query(F.data == "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –ø–∏—Å—å–º–æ")
async def player_letter(callback: types.CallbackQuery, state: FSMContext):
    global PLAYER_LETTER
    global GAME_ID
    PLAYER_LETTER = callback.message.text
    if len(PLAYER_LETTER) > 200:
        difference = len(PLAYER_LETTER) - 200
        await callback.message.answer(f"–ù—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ –Ω–µ –±–æ–ª–µ–µ 200 —Å–∏–º–≤–æ–ª–æ–≤. –í–≤–µ–¥–∏ —Ç–µ–∫—Å—Ç –∫–æ—Ä–æ—á–µ –Ω–∞ {difference}")
        await state.set_state(StepsForm.LETTER)
    else:
        game = None
        async for g in Game.objects.filter(creators_id=GAME_ID):
            game = g
            break
        participant = Patricipants(game=game, id_user=PLAYER_ID,
                                   name=NAME, e_mail=PLAYER_E_MAIL,
                                   interests=PLAYER_INTERESTS, letter_to_santa=PLAYER_LETTER, )
        await sync_to_async(participant.save)()

        await callback.message.answer("–ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ, —Ç—ã –≤ –∏–≥—Ä–µ! "
                                      "\"–î–∞—Ç–∞\" –º—ã –ø—Ä–æ–≤–µ–¥–µ–º –∂–µ—Ä–µ–±—å–µ–≤–∫—É –∏ —Ç—ã —É–∑–Ω–∞–µ—à—å –∏–º—è "
                                      "–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã —Å–≤–æ–µ–≥–æ —Ç–∞–π–Ω–æ–≥–æ –¥—Ä—É–≥–∞. "
                                      "–ï–º—É –∏ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –ø–æ–¥–∞—Ä–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫!")
